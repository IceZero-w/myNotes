返回主页 李月云
博客园首页新随笔联系订阅管理
随笔 - 71  文章 - 4  评论 - 2
bootstrap
Bootstrap基础
一 概述
1.下载bootstrap
官网：http://v3.bootcss.com/3
2.安装sublime text
轻量级、简洁高效、跨平台的编辑器
(1)使用Package Control安装插件
ctrl+调出console，粘贴以下代码到命令行并回车
import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())
重启Sublime Text2
在sublime text3中ctrl+`调出console，粘贴代码：
import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)
重启Sublime Text3
如果在preferences->package settings中看到package control，则安装成功
若安装不成功，需下载文件手动安装。
(2)需要安装的插件
Ctrl+shift+p调出命令面板，输入install调出Install Package并回车，在列表中选中要安装的插件
a.GBK Encoding Support
如果需要转成uft-8的，可以在file->GBK or UTF-8中设置
b.Zen Coding(emmet):快速编写
c.prefixr:私有前缀自动补齐
d.linter:高亮错误代码或注释
e.Alignment:自动对齐
f.clipboard History:复制粘贴
二.排版
全局CSS样式中的排版样式，包括标题、页面主体、对齐、列表等内容
1.页面主体
全局的font-size为14px，line-height行高为20px，<p>段落元素为10px，颜色为#333
2.标题
h1到h6为36px,30px,24px,18px,14px,12px
还支持普通内联元素定义class=(.h1~h6)实现相同的功能
在h1~h6元素之间，还可以嵌入small元素作为副标题
<h1>Bootstrap框架<small>Bootstrap小标题</small></h1>
3.内联文本元素
添加标记：<mark>...</mark>
各种加线条的文本：<del>...</del>   删除的文本      <s>...</s>   无用的文本(同上)
<ins>...</ins>    插入的文本     <u></u>     效果同上，都是下划线文本
各种强调的文本：
<small>     标准字号的85%      <strong>加粗700
<em>   倾斜
4.对齐
class="text-left"  居左     class="text-center"  居中
text-right   居右   text-justify  两端对齐，支持度不佳
text-nowrap    不换行
5.大小写
class="text-lowercase"  小写         text-uppercase   大写
text-capitalize   首字母大写
6.地址
<address></address>   去掉了倾斜，设置了行高，底部20px
7.引用文本
<blockquote></blockquote>   增加了侧边线，设定了字体大小和内外边距
<blockquote class="blockquote-reverse"></blockquote>     反向
8.列表
<ul class="list-unstyled list-inline">
     <li>Bootstrap 框架</li>
     <li>Bootstrap 框架</li>
     <li>Bootstrap 框架</li>
     <li>Bootstrap 框架</li>
     <li>Bootstrap 框架</li>
</ul>
class="list-unstyled"取消默认样式     class="list-inline"内联样式
水平排列描述列表：
<dl class="dl-horizontal">
     <dt>Bootstrap</dt>
     <dd>常规标签</dd>    
</dl>
这里的dl,dt,dd相当于table,tr,td
Bootstrap    常规标签    
(9)代码
内联代码：    <code></code>
<code>&lt;section&gt;</code>     //<section>
用户输入：<kbd></kbd>
press<kbd>ctrl+,</kbd>    //ctrl+,有特殊标记块
代码块：   <pre></pre>
三.表格和按钮
表格
1.基本格式
<table class="table">
2.条纹状表格
<table class="table table-striped">
3.带边框的表格
<table calss="table table-bordered">
4.悬停鼠标
<table class="table table-hover">
5.状态类
可以单独设置每一行的背景样式，共有五种样式：
active    鼠标悬停在行或单元格上
success    标识成功或积极的动作
info     标识普通的提示信息或动作
warning    标识警告或需要用户注意
danger      表示危险或潜在的带来负面影响的动作
<table class="table table-striped table-bordered table-hover">
     <thead>
          <tr>
               <th>编号</th>
               <th>姓名</th>
               <th>性别</th>
               <th>年龄</th>
          </tr>
     </thead>
     <tbody>
          <tr>
               <td>1</td>
               <td>张三</td>
               <td>男</td>
               <td>50</td>
          </tr>
          <tr class="info">
               <td>2</td>
               <td>李四</td>
               <td>女</td>
               <td>48</td>
          </tr>
          <tr>
               <td>3</td>
               <td>王五</td>
               <td>男</td>
               <td>23</td>
          </tr>
          <tr>
               <td>4</td>
               <td>赵六</td>
               <td>女</td>
               <td>34</td>
          </tr>
     </tbody>
</table>
6.隐藏某一行
<tr class="sr-only">
7.响应式表格
在表格父元素设置响应式，小于768px出现边框
<body class="table-responsive">
按钮
1.可作为按钮使用的标签或元素
<a href="###" class="btn btn-default">Link</a>
<input type="button" class="btn btn-default" value="input">
<button class="btn btn-default">Button</button>
以上三种结果一样
2.样式：
btn-default   默认样式      btn-success     btn-info
btn-warning           btn-danger         btn-primary首选项样式
btn-link链接样式
3.尺寸大小
从大到小：
class="btn btn-lg"     class="btn"
class="btn btn-sm"    class="btn btn-xs"
4.块级按钮
class="btn btn-block"
5.激活状态
class="btn active"
6.禁用按钮
class="btn disabled"
四.表单和图片
表单
1.基本的表单样式
一般情况下，需要将表单元素包裹到form-group里，用<div class="form-group">来存放，内容表单元素名称一般放在label标签里，而input之类的类名设置为form- control，checkbox和radio等元素需要写在自己的div里。
<form>
     <div class="form-group">
          <label>电子邮箱：</label>
     <input type="email" class="form-control" placeholder="请输入您的邮箱号">
     </div>
     <div class="form-group">
          <label>密码：</label>
     <input type="password" class="form-control" placeholder="请输入密码">
     </div>    
</form>
支持的输入框控件包括：text,password,datetime,datetime-local,date,month,time,week,number,email,url,search,tel,color
单独的表单控件会被自动赋予一些全局样式，所有设置了.form-control 的<input>,<textarea>,<select>元素都将默认设置为width:100%，将label 和这些控件包裹在.form-group里可以获得最好的排列
2.内联表单
让表单左对齐浮动，并表现为inline-block内联块结构
<form class="form-inline">    //在form标签里设置
全部为一行，当小于768px时，会恢复独占样式
要设置label，如果没有为每个输入控件设置label，屏幕阅读器将无法正确识读，对于内联表单，可以设置.sr-only将label隐藏
3.表单合组
在前后增加片段，用带有.input-group-addon的.input-group，可以给.form-control前面或后面追加元素
<div class="input-group">
          <div class="input-group-addon">￥</div>
          <input type="text" class="form-control">
          <div class="input-group-addon">.00</div>
</div>
4.水平排列
让表单内的元素保持水平排列
<form class="form-horizontal">
     <div class="form-group">
          <label class="col-sm-2 control-label">电子邮箱：</label>
     <div class="col-sm-10">
          <input type="email" class="form-control" placeholder="请输入您的邮箱号">
     </div>
     </div>
     <div class="form-group">
          <label class="col-sm-2 control-label">密码：</label>
          <div class="col-sm-10">
     <input type="password" class="form-control" placeholder="请输入密码">
     </div>
     </div>    
</form>
注：control-label的文字采用右对齐方式
5.复选框和单选框
<div class="checkbox">
          <label>
               <input type="checkbox">体育
          </label>
</div>
这里使用<lable>使得点击文字时也可以勾选多选框，用div是为了能让每一个多选按钮为一行。
禁用：disabled
设置内联一行显示的复选框：
<label class="checkbox-inline">
               <input type="checkbox">音乐
</label>
<label class="radio-inline disabled">
               <input type="radio">男
</label>
6.下拉列表
<select class="form-control">
               <option value="1">1</option>
               <option value="2">2</option>
               <option value="3">3</option>
               <option value="4">4</option>
</select>
7.校验状态
has-error   错误状态
has-success   成功状态
has-warning     警告状态
<div class="checkbox has-error">
8.添加额外的图标
<div class="form-group has-feedback">
               <label>电子邮件</label>
               <input type="email" class="form-control">
               <span class="glyphicon glyphicon-ok form-control-feedback"></span>
</div>
使用icon需要在form-group加.has-feedback，最后加一个span存放icon
还有图标：
glyphicon-ok      成功状态
glyphicon-warning-sign    警告状态
glyphicon-remove    错误状态
9.控制大小
class="form-control input-lg"
class="form-control"
class="form-control input-sm"
图片
1.图片形状
<img src="" alt="" class="img-rounded">
class="img-circle"     class="img-thumbnail"
2.响应式图片：class="img-responsive"
五.栅格系统
1.移动设备优先
<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no">
2.布局容器
Bootstrap需要为页面内容和栅格系统包裹一个.container容器，由于padding等属性的原因这两种容器不能互相嵌套
<div class="container-fluid"></div>    //100%宽度
<div class="container"></div>     //固定宽度
栅格系统中，浏览器会随着屏幕的大小的增减自动分配最多12列，通过一系列行与列的组合来创建页面布局。
<style type="text/css">
          .a{
               height: 50px;
               border: 1px solid #ccc;
               background-color: #eee;
          }
</style>
<div class="container-fluid a">
     <div class="row">
          <div class="col-md-1 a">1</div>   //共12个
     </div>
     <div class="row">
          <div class="col-md-9 a">9</div>
          <div class="col-md-3 a">3</div>
     </div>
     <div class="row">
          <div class="col-md-4 a">4</div>      //共3个
     </div>
</div>
栅格参数表
                           超小屏幕(手机)<768px    小屏幕(平板)>=768px    中等屏幕(桌面显示器)>=992px    大屏幕>=1200px
栅格系统行为                    总是水平排列                 开始时堆叠在一起，当大于这些阙值时将变为水平排列
.container最大宽度          none(自动)                 750px                               970px                                          1170px
列数                         12
列前缀                          .col-xs-                            .col-sm-                    .col-md-                                          .col-lg-
最大列宽                          自动                          ~62px                          ~81px                                              ~97px
槽宽(gutter)                    30px(每列左右均有15px)
可嵌套                         是
偏移(offsets)                是
列排序                          是
<div class="container-fluid a">
     <div class="row">
          <div class="col-lg-3 col-md-4 col-sm-6 a">1</div>     //共12个 
     </div>
</div>
当为大屏幕的时候有4列，中等屏幕的时候有3列，小屏幕的时候有2列，手机屏幕则单行显示
列偏移，让中间保持空隙：col-md-offset-
<div class="row">
          <div class="col-md-8 a">8</div>
          <div class="col-md-3 col-md-offset-1 a">3</div>
</div>
嵌套：
<div class="row">
          <div class="col-md-9 a" style="padding:0">
          <div class="col-md-4 a">4</div>
          <div class="col-md-4 a">4</div>
          <div class="col-md-4 a">4</div>
          </div>
          <div class="col-md-3 a">3</div>
</div>
可以把两个列交换位置，push为向左移动，pull为向右移动：
<div class="row">
          <div class="col-md-9 col-md-push-3 a">9</div>
         <div class="col-md-3 col-md-pull-9 a">3</div>
</div>
将3和9的位置互换
六.辅助类和响应式工具
辅助类
bootstrap在布局方面提供了一些细小的辅助样式，用于文字颜色以及背景色的设置、显示关闭图标等
1.情景文本颜色
text-muted   柔和灰       text-primary    主要蓝
text-success  成功绿       text-info   信息蓝
text-warning    警告黄       text-danger   危险红
<p class="text-muted">Bootstrap</p>
2.情景背景色
bg-primary     bg-success    bg-info    bg-warning    bg-danger
颜色及设置同上
3.关闭按钮
<button type="button" class="close">&times;</button>
4.三角符号
<span class="caret"></span>
5.快速浮动
<div class="pull-left">左边</div>
<div class="pull-right">右边</div>
相当于float，只不过使用了!important加强了优先级
6.块级居中
<div class="center-block">居中</div>
即：margin:x auto       并且设置了display:block
7.清理浮动
<div class="clearfix"></div>
8.显示和隐藏
<div class="show">show</div>
<div class="hidden">hidden</div>
响应式工具
在媒体查询时，针对不同的屏幕大小，有时需要显示和隐藏部分内容，响应式工具类就提供了这种解决方案。
<div class="visible-xs-block a">超小屏激活显示</div>
<div class="hidden-xs a">超小屏激活隐藏</div>
当达到超小屏幕时，会激活其显示隐藏
                     超小屏幕(手机)    小屏幕(平板)    中等屏幕(桌面)     大屏幕(桌面)
visible-xs-*         可见
visible-sm-*                                      可见
visible-md-*                                                              可见
visible-lg-*                                                                                              可见
hidden-xs            隐藏
hidden-sm                                        隐藏
hidden-md                                                                 隐藏
hidden-lg                                                                                                   隐藏
这里的*代表none,block,inline等
七.图标菜单和按钮组件
图标菜单
1.小图标组件
bootstrap提供了免费的263个小图标，可以使用<i>或<span>标签来配合使用
具体可以参考http://v3.bootcss.com/components/#glyphicons
<i class="glyphicon glyphicon-star"></i>
<button class="btn btn-default btn-lg">
     <span class="glyphicon glyphicon-star"></span>
</button>
2.下拉菜单组件
下拉菜单就是点击一个元素或按钮，触发隐藏的列表显示出来
<div class="dropdown">
<button class="btn btn-default" data-toggle="dropdown">下拉菜单
<span class="caret"></span>
</button>
<ul class="dropdown-menu">
     <li><a href="#">首页</a></li>
     <li><a href="#">资讯</a></li>
     <li><a href="#">产品</a></li>
     <li><a href="#">关于</a></li>
</ul>
</div>
按钮和菜单需要包裹在.dropdown的容器里，被点击的元素按钮需要设置data-toggle="dropdown"才能有效。对于菜单部分，设置 class="dropdown-menu"才能设置自动隐藏并添加固定样式，设置class="caret"，可上可下。
设置向上触发只需修改：<div class="dropup">
菜单项居右对齐，默认值是dropdown-menu-left，只需设置：
<ul class="dropdown-menu dropdown-menu-right">
设置菜单的分割线：<li class="divider"></li>
设置菜单的标题，不要加超链接：<li class="dropdown-header">网站导航</li>
让菜单默认显示：<div class="dropdownopen">
设置菜单的禁用项：<li class="disabled"></li>
按钮组组件
按钮组就是多个按钮集成在一个容器里形成独有的效果
1.将多个按钮组整合起来便于管理
<div class="btn-toolbar">
<div class="btn-group">
     <button class="btn btn-default">左</button>
     <button class="btn btn-default">中</button>
     <button class="btn btn-default">右</button>
</div>
<div class="btn-group">
     <button class="btn btn-default">1</button>
     <button class="btn btn-default">2</button>
     <button class="btn btn-default">3</button>
</div>
</div>
2.设置按钮大小
<div class="btn-group btn-group-lg">
<div class="btn-group">
<div class="btn-group btn-group-sm">
<div class="btn-group btn-group-xs">
3.嵌套分组，比如下拉菜单
<div class="btn-toolbar">
<div class="btn-group">
     <button class="btn btn-default">左</button>
     <button class="btn btn-default">中</button>
     <button class="btn btn-default">右</button>
     <div class="btn-group">
     <button class="btn btn-default dropdown-toggle" data-toggle="dropdown">下拉菜单
<span class="caret"></span>
</button>
<ul class="dropdown-menu">
     <li><a href="#">首页</a></li>
     <li><a href="#">资讯</a></li>
     <li><a href="#">产品</a></li>
     <li><a href="#">关于</a></li>
</ul>
</div>
</div>
注：这里的div中并没有实现class="dropdown",需要在button中加入dropdown-toggle
4.竖直排列
<div class="btn-group-vertical">
5.设置两端对齐按钮组，必须使用a标签
<div class="btn-group-justified">
     <a href="#" type="button" class="btn btn-default">左</a>
     <a href="#" type="button" class="btn btn-default">中</a>
     <a href="#" type="button" class="btn btn-default">右</a>
</div>
6.按钮式下拉菜单
<div class="btn-group">
     <button type="button" class="btn btn-default dropdown-toggle"
     data-toggle="dropdown">
     下拉菜单
     <span class="caret"></span>
     </button>
     <ul class="dropdown-menu">
          <li><a href="#">首页</a></li>
          <li><a href="#">资讯</a></li>
          <li><a href="#">产品</a></li>
          <li><a href="#">关于</a></li>
     </ul>
</div>
或者将“下拉菜单”分离出来，只需修改
<button class="btn btn-default">下拉菜单</button>
     <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">    
<span class="caret"></span>
向上弹出式：<div class="btn-group dropup">
八.输入框和导航组件
输入框组件
文本输入框就是可以在<input>元素前后加上文字或按钮，可以实现对表单控件的扩展
1.在左侧添加文字
<div class="input-group">
     <span class="input-group-addon"><input type="radio"></span>
     <input type="text" class="form-control">
</div>
在右侧添加文字
<div class="input-group">
     <input type="text" class="form-control">
     <span class="input-group-addon">@163.com</span>
</div>
或者
<div class="input-group">
<input type="text" class="form-control">
<div class="input-group-btn">
<button class="btn btn-default">提交</button>
</div></div>
设置尺寸，分别为lg,默认,sm,xs:
<div class="input-group input-group-lg">
导航组件
1.基本导航组件
<ul class="nav nav-tabs">
     <li class="active"><a href="#">首页</a></li>
     <li><a href="#">资讯</a></li>
     <li><a href="#">产品</a></li>
     <li><a href="#">关于</a></li>
</ul>
2.胶囊式导航
只需修改：<ul class="nav nav-pills nav-stacked">
nav-pills是胶囊式，nav-stacked是垂直式
3.两端对齐式
<ul class="nav nav-tabs nav-justified">
4.禁用导航中的项目
<li class="disabled"><a href="#">首页</a></li>
5.带下拉菜单的导航
<ul class="nav nav-tabs">
     <li class="active"><a href="#">首页</a></li>
     <li><a href="#">资讯</a>
     <li class="dropdown">
     <a href="#" class="dropdown-toggle" data-toggle="dropdown">产品
     <span class="caret"></span>
     </a>
     <ul class="dropdown-menu">
          <li><a href="#">产品一</a></li>
          <li><a href="#">产品二</a></li>
     </ul>
     </li>
     <li><a href="#">关于</a></li>
</ul>
6.导航条组件
导航条中有一个背景色，而且导航条可以是纯链接，也可以是表单，在实际使用中比导航复杂得多。
基本格式
<nav class="navbar navbar-default">
</nav>
反色调导航
<nav class="navbar navbar-inverse">
</nav>
基本导航，包含标题和列表
<nav class="navbar navbar-default">
<div class="container">
     <div class="navbar-header">
     <a href="#" class="navbar-brand">标题</a>
     </div>
     <ul class="nav navbar-nav">
          <li class="active"><a href="#">首页</a></li>
          <li><a href="#">资讯</a></li>
          <li><a href="#">产品</a></li>
          <li><a href="#">关于</a></li>
     </ul>
</div>
</nav>
在导航中使用表单
<nav class="navbar navbar-default">
<div class="container">
     <div class="navbar-header">
     <a href="#" class="navbar-brand">标题</a>
     </div>
     <ul class="nav navbar-nav">
          <li class="active"><a href="#">首页</a></li>
          <li><a href="#">资讯</a></li>
          <li><a href="#">产品</a></li>
          <li><a href="#">关于</a></li>
     </ul>
     <form action="" class="navbar-form navbar-right">
     <div class="input-group">
<input type="text" class="form-control">
<div class="input-group-btn">
<button class="btn btn-default">提交</button>
</div></div>
</form>
<button class="btn btn-default navbar-btn">按钮</button>
<p class="navbar-text">文本内容<a href="#" class="navbar-link">链接</a></p>
</div>
</nav>
导航中使用按钮
<button class="btn btn-default navbar-btn">按钮</button>
对齐方式
class="navbar-right"或者class="navbar-left"
导航中使用一段文本
<p class="navbar-text">文本内容</p>
非导航链接，一般需要置入文本区域内
<a href="#" class="navbar-link">链接</a>
导航条置顶
<nav class="navbar navbar-default navbar-fixed-top">
导航条置底
<nav class="navbar navbar-default navbar-fixed-bottom">
静态导航，和页面等宽的导航条，去掉了圆角
<nav class="navbar navbar-default navbar-static-top">
九.路径分页标签和徽章组件
Bootstrap的四个组件功能：路径组件、分页组件、标签组件、徽章组件
1.路径组件，也叫面包屑导航
<ol class="breadcrumb">
     <li><a href="#">首页</a></li>
     <li><a href="#">产品列表</a></li>
     <li class="active">韩版大衣</li>
</ol>
2.分页组件
可以提供带有展示页面的功能
<ul class="pagination">
     <li><a href="#">&laquo;</a></li>
     <li><a href="#">1</a></li>
     <li><a href="#">2</a></li>
     <li><a href="#">3</a></li>
     <li><a href="#">4</a></li>
     <li><a href="#">5</a></li>
     <li><a href="#">&raquo;</a></li>
</ul>
首选项和禁用：
<li class="active"><li class="disabled">
设置尺寸，包括lg,默认,sm,xs：
<ul class="pagination pagination-sm">
翻页效果：
<ul class="pager">
     <li><a href="#">上一页</a></li>
     <li><a href="#">下一页</a></li>
</ul>
对齐翻页链接：
<ul class="pager">
     <li class="previous"><a href="#">上一页</a></li>
     <li class="next"><a href="#">下一页</a></li>
</ul>
上一页在最左边，下一页在最右边
翻页项禁用：
<li class="previous disabled">
3.标签
在文本后面带上标签：
<h3>标签<span class="label label-default">new</span></h3>
标签样式包括：
label-default  label-primary   label-success 
label-info  label-warning   label-danger
4.徽章
未读信息数量徽章：
<a href="#">信息<span class="badge">10</span></a>
按钮中使用徽章：
<button class="btn btn-success">提交<span class="badge">3</span></button>
激活状态自动适配色调：
<ul class="nav nav-pills">
     <li class="active"><a href="#">首页<span class="badge">2</span></a></li>
     <li><a href="#">资讯</a></li>
     <li><a href="#">产品</a></li>
     <li><a href="#">关于</a></li>
</ul>
十.巨幕页头缩略图和警告框组件
1.巨幕组件：展示网站的关键性区域
在固定的范围内，有圆角
<div class="container">
     <div class="jumbotron">
          <h3>网站标题</h3>
          <p>网站简介</p>
          <p><a href="#" class="btn btn-default">快速进入</a></p>
     </div>
</div>
100%全屏，没有圆角
<div class="jumbotron">
     <div class="container">
          <h3>网站标题</h3>
          <p>网站简介</p>
          <p><a href="#" class="btn btn-default">快速进入</a></p>
     </div>
</div>
2.页头组件
<div class="page-header">
     <h1>大标题<small>小标题</small></h1>
</div>
3.缩略图组件
缩略图配合响应式
<div class="container">
     <div class="row">
          <div class="col-xs-6 col-md-3 col-sm-4">
               <div class="thumbnail">
               <img src="img/1.png" alt="photo">
               </div>
          </div>
          <div class="col-xs-6 col-md-3 col-sm-4">
               <div class="thumbnail">
               <img src="img/1.png" alt="photo">
               </div>
          </div>
          <div class="col-xs-6 col-md-3 col-sm-4">
               <div class="thumbnail">
               <img src="img/1.png" alt="photo">
               </div>
          </div>
          <div class="col-xs-6 col-md-3 col-sm-4">
               <div class="thumbnail">
               <img src="img/1.png" alt="photo">
               </div>
          </div>
     </div>
</div>
自定义内容
<div class="container">
     <div class="row">
          <div class="col-xs-6 col-md-3 col-sm-4">
               <div class="thumbnail">
               <img src="img/1.png" alt="photo">
               <div class="caption">
                    <h3>图文并茂</h3>
                    <p>这是一个图片结合文字的缩略图</p>
                    <p><a href="#" class="btn btn-default">进入</a></p>
               </div>
               </div>
          </div>
          <div class="col-xs-6 col-md-3 col-sm-4">
               <div class="thumbnail">
               <img src="img/1.png" alt="photo">
               <div class="caption">
                    <h3>图文并茂</h3>
                    <p>这是一个图片结合文字的缩略图</p>
                    <p><a href="#" class="btn btn-default">进入</a></p>
               </div>
               </div>
          </div>
     </div>
</div>
4.警告框组件
这是一组预定义消息
基本警告框
<div class="alert alert-success">Bootstrap</div>
<div class="alert alert-info">Bootstrap</div>
<div class="alert alert-danger">Bootstrap</div>
<div class="alert alert-warning">Bootstrap</div>
带关闭的警告框
<div class="alert alert-success">
     Bootstrap
     <button class="close" data-dismiss="alert">
          <span>&times;</span>
     </button>
</div>
自动适配的超链接
<div class="alert alert-success">
     Bootstrap,请到官网<a href="#" class="alert-link">下载</a>
</div>
十一.进度条媒体文件和Well组件
1.Well组件：可以实现简单的嵌入效果
包括well-lg well well-sm
<div class="well">
     Bootstrap
</div>
2.进度条组件：为当前工作流程或动作提供实时反馈
基本进度条：
<div class="progress">
     <div class="progress-bar" style="width:60%;">60%</div>
</div>
最低值进度条
<div class="progress">
     <div class="progress-bar" style="min-width:20%;">0%</div>
</div>
结合情景的进度条
<div class="progress">
     <div class="progress-bar progress-bar-success" style="min-width:10px;width:0%;">0%</div>
</div>
<div class="progress">
     <div class="progress-bar progress-bar-success" style="min-width:10px;width:60%;">60%</div>
</div>
条纹状进度条
<div class="progress-bar progress-bar-success progress-bar-striped" style="min-width:10px;width:60%;">60%</div>
动画效果
在<div>中加入active即可
堆叠效果
<div class="progress">
     <div class="progress-bar progress-bar-success progress-bar-striped active" style="min-width:10px;width:35%;">35%</div>
     <div class="progress-bar progress-bar-warning progress-bar-striped active" style="min-width:10px;width:20%;">20%</div>
     <div class="progress-bar progress-bar-danger progress-bar-striped active" style="min-width:10px;width:10%;">10%</div>
</div>
3.媒体对象组件
媒体对象包括图片、视频、音频等媒体，以达到对象和文本组合显示的样式效果
基本实例
<div class="media">
     <div class="media-left media-middle">
     <img src="img/1.png" alt="" class="media-object">
     </div>
     <div class="media-body">
          <h4 class="media-heading">标题</h4>
          <p>....</p>
     </div>
</div>
默认是media-top,可以改为media-bottom或media-middle
若要修改media-left，则需将图片放在右边，改为：
<div class="media">
     <div class="media-body">
          <h4 class="media-heading">标题</h4>
          <p>....</p>
     </div>
     <div class="media-right">
     <img src="img/1.png" alt="" class="media-object">
     </div>
</div>
媒体对象列表
<ul class="media-list">
     <li class="media">
     <div class="media-left media-middle">
     <img src="img/1.png" alt="" class="media-object">
     </div>
     <div class="media-body">
          <h4 class="media-heading">标题</h4>
          <p>....</p>
          <div class="media">
     <div class="media-left media-middle">
     <img src="img/1.png" alt="" class="media-object">
     </div>
     <div class="media-body">
          <h4 class="media-heading">标题</h4>
          <p>....</p>
     </div>
     </div>
     </div>
     </li>
</div>
</ul>
提供了一种回复的方式。
十二.列表组面板和控制组件
1.列表组组件：用于显示一组列表的组件
基本实例
<ul class="list-group">
     <li class="list-group-item">第一条数据</li>
     <li class="list-group-item">第二条数据</li>
     <li class="list-group-item">第三条数据</li>
</ul>
列表项带徽章
<li class="list-group-item">第一条数据<span class="badge">10</span></li>
链接和首选
<div class="list-group">
     <a href="#" class="list-group-item active">第一条数据</a>
     <a href="#" class="list-group-item">第二条数据</a>
     <a href="#" class="list-group-item">第三条数据</a>
</div>
按钮式列表
<div class="list-group">
     <button class="list-group-item active">第一条数据</button>
     <button class="list-group-item">第二条数据</button>
     <button class="list-group-item">第三条数据</button>
</div>
设置禁选项
class="list-group-item disabled"
情景类选项(四种)
class="list-group-item list-group-item-success"
2.面板组件：存放内容的容器组件
基本实例
<div class="panel panel-default">
     <div class="panel-body">详细内容区</div>
</div>
带标题容器和注脚的面板
<div class="panel panel-default">
     <div class="panel-heading">
          <h3 class="panel-title">面板标题</h3>
     </div>
     <div class="panel-body">详细内容区</div>
     <div class="panel-footer">底部区域</div>
</div>
情景效果：default,success,info,warning,danger,primary
<div class="panel panel-success">
表格类面板
<div class="panel panel-default">
     <div class="panel-heading">
          <h3 class="panel-title">表格标题</h3>
     </div>
     <div class="panel-body">表格内容区</div>
     <table class="table">
          <tr>
               <th>1</th>
               <th>2</th>
               <th>3</th>
          </tr>
          <tr>
               <td>1</td>
               <td>2</td>
               <td>3</td>
          </tr>
     </table>
</div>
列表类面板
<div class="panel-body">表格内容区</div>
     <ul class="list-group">
     <li class="list-group-item">第一条数据</li>
     <li class="list-group-item">第二条数据</li>
     <li class="list-group-item">第三条数据</li>
     </ul>
3.响应式嵌入组件
根据被嵌入内容的外部容器的宽度，自动创建一个固定的比例，从而让浏览器自动确定内容的尺寸，能够在各种设备上缩放。
这些规则可以直接用于<iframe>,<embed>,<video>,<object>元素
16:9响应式
<div class="embed-responsive embed-responsive-16by9"><embed width="100%" height="100%" src=""></embed></div>
十三.模态框插件
使用模态框的弹出组件需要三层div容器元素，分别为modal(模态声明层)、dialog(窗口声明层)、content(内容层)。在内容层里，还有三层，分别为header(头部)、body(主体)、footer(注脚)
<div class="modal" tabindex="-1">
     <div class="modal-dialog">
          <div class="modal-content">
               <div class="modal-header"><button class="close" data-dismiss="modal">
                    <span>&times;</span>
               </button>
               <h4 class="modal-title">会员登录</h4>
               </div>
               <div class="modal-body">
                    <p>暂时无法登录会员</p>
               </div>
               <div class="modal-footer">注脚</div>
          </div>
     </div>
</div>
点击“点击弹窗”后显示弹出框，点击关闭按钮后弹出框关闭
<div class="modal" id="myModal" tabindex="-1">
     <div class="modal-dialog">
          <div class="modal-content">
               <div class="modal-header"><button class="close" data-dismiss="modal">
                    <span>&times;</span>
               </button>
               <h4 class="modal-title">会员登录</h4>
               </div>
               <div class="modal-body">
                    <p>暂时无法登录会员</p>
               </div>
               <div class="modal-footer">
                    <button class="btn btn-defult">注册</button>
                    <button class="btn btn-primary">登录</button>
               </div>
          </div>
     </div>
</div>
<button class="btn btn-primary btn-lg" data-toggle="modal"
data-target="#myModal">点击弹窗</button>
其中，data-toggle="modal" 用来控制模态弹出框的显示，data-target用来定义要弹出的模态框是哪一个
弹窗大小：lg,正常,sm
<div class="modal-dialog modal-lg">
设置淡入淡出效果
<div class="modal fade" id="myModal" tabindex="-1">
在主体部分使用栅格系统中的流体
<div class="modal-body">
                    <div class="container-fluid">
                         <div class="row">
                              <div class="col-md-4">1</div>
                              <div class="col-md-4">1</div>
                              <div class="col-md-4">1</div>
                         </div>
                    </div>
</div>
说明：
所有的插件都是基于javascript/jquery的，就有四个要素：用法、参数、方法和事件
(1)用法
可以通过data属性
data-toggle表示触发类型
data-target表示触发的节点
如果不是使用的<button>，而是<a>，data-target也可以使用href="#myModal"
(2)参数
通过在HTML元素上设置data-*的属性声明来控制效果
data-backdrop  布尔值或static   true     表示背景存在黑灰透明遮罩，且单击空白背景可关闭弹窗；若为static，表示背景存在黑灰透明遮罩，击空白背景不可关闭弹窗
data-keyboard  布尔值   true   按esc键会关闭窗口
data-show   布尔值    true     初始化时，默认显示
href    url路径   空值   如果不是以#号开头，则表示一个url地址，加载url内容到modal-content容器里；如果是#号，就是取代data-target的方法
<button class="btn btn-primary btn-lg" data-toggle="modal"  data-target="#myModal" data-backdrop="static">点击弹窗</button>
remote   url路径  空值  远程获取指定内容填充到modal-content容器中
(3)方法
toggle   .modal('toggle')    触发时，反转切换弹窗状态
show     .modal('show')    触发时，显示弹窗
hide       .modal('hide')      触发时，关闭弹窗
程序修改为：
<button id="btn" class="btn btn-primary btn-lg">点击弹窗</button>
<script src="../js/jquery.js" type="text/javascript"></script>
<script src="../js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript">
     $('#btn').on('click',function(){
          $('#myModal').modal('show');
     })
</script>
(4)事件
模态框支持四种事件，分别对应弹出前、弹出后、关闭前和关闭后
show.bs.modal     在show方法调用时立即触发
shown.bs.modal    在模态框完全显示出来，并且等css动画完成后触发
hide.bs.modal    在Hide方法调用时，但还未关闭隐藏时触发、
hidden.bs.modal    在模态框完全隐藏之后，并且等css动画完成之后触发
<script type="text/javascript">
     $('#btn').on('click',function(){
          $('#myModal').modal('show');
     });
     $('#myModal').on('show.bs.modal',function(){
          alert('执行show方法时立即触发');
     })
</script>
$('#myModal').on('shown.bs.modal',function(){
          alert('当弹窗完全出现再执行');
})
$('#myModal').on('hide.bs.modal',function(){
          alert('执行hide方法时立即触发');
})
$('#myModal').on('hidden.bs.modal',function(){
          alert('当模态框完全关闭后触发');
})
$('#myModal').on('loaded.bs.modal',function(){
          alert('远程数据加载完毕后触发');
})
十五.下拉菜单和滚动监听插件
下拉菜单
1.声明式的关键：外围容器用class="dropdown"包裹
内部点击按钮绑定事件data-toggle="dropdown"
菜单元素使用class="dropdown-menu"
如果将按钮放在容器外部，可以通过data-target进行绑定
<div class="dropdown" id="myDiv">
<ul class="dropdown-menu">
     <li class="active">首页</li>
     <li>产品</li>
     <li>关于</li>
</ul>
</div>
<button class="btn btn-default" data-toggle="dropdown" data-target="#myDiv">下拉菜单
<span class="caret"></span>
</button>
不过还要调整ul的位置
2.在javascript调用中，没有属性，方法并不好用，有四个基本事件
$("#btn").dropdown();
show.bs.dropdown   shown.bs.dropdown   hide.bs.dropdown  hidden.bs.dropdown
<div class="dropdown" id="myDiv">
<button class="btn btn-default" id="btn">下拉菜单
<span class="caret"></span>
</button>
<ul class="dropdown-menu">
     <li class="active">首页</li>
     <li>产品</li>
     <li>关于</li>
</ul>
</div>
<script src="../js/jquery.js" type="text/javascript"></script>
<script src="../js/bootstrap.min.js" type="text/javascript"></script>
<script>
     $('#btn').dropdown();
</script>
此时点击其他键，列表不会消失，还需要添加data-*
$('#dropdown').on('show.bs.dropdown',function(){});
滚动监听
1.用来根据滚动条所处的位置自动更新导航项目，
<nav class="navbar navbar-default">
     <a href="#" class="navbar-brand">Web开发</a>
     <ul class="nav navbar-nav">
          <li><a href="#HTML5">HTML5</a></li>
          <li><a href="#bootstrap">Bootstrap</a></li>
          <li class="dropdown">
               <a href="#" data-toggle="dropdown">javascript<span class="caret"></span></a>
               <ul class="dropdown-menu">
                    <li><a href="#jquery">jquery</a></li>
                    <li><a href="#">Yui</a></li>
                    <li><a href="#extjs">ExtJS</a></li>
               </ul>
          </li>
     </ul>
</nav>
<div style="padding:0 10px;height:200px;overflow:auto;">
     <h4 id="HTML5">HTML5</h4>
     <p>............</p>
     <h4 id="bootstrap">bootstrap</h4>
     <p>.............</p>
     <h4 id="jquery">jquery</h4>
     <p>.............</p>
     <h4 id="extjs">ExtJS</h4>
     <p>.............</p>
</div>
点击导航栏的jquery，则下面显示jquery部分的内容，并且设置了宽高和滚动条
2.重要的属性
data-offset   默认为10，固定内容距滚动容器10像素以内，就高亮显示所对应的菜单
data-spy   设置scroll，将设置滚动容器监听
data-target    设置#nav，绑定指定监听的菜单
<div data-offset="0" data-spy="scroll" style="padding:0 10px;height:200px;overflow:auto;positive:relative;">
设置data-spy="scroll"时，还要设置positive:relative;滚动到某项内容时，某个对应的导航菜单就会高亮显示
当有多个导航时，会将所有的导航都关联，若只想关联某一个，要加上data-target，防止多个菜单时产生错误
<nav class="navbar navbar-default" id="nav1">
<div data-target="#nav1" ....>
3.使用脚本方式定义属性
<div id="content" style="padding:0 10px;height:200px;overflow:auto;positive:relative;">
<script>
$('#content').scrollspy({
     offset:0,
     target:'#nav1',
});
</script>
4.切换到新条目的事件
activate.bs.scrollspy    每当一个新条目被激活后都将由滚动监听插件触发此事件
$('#nav1').on('activate.bs.scrollspy',function(){
     alert('新条目被激活后触发此事件');
});
5.更新DOM的方法
refresh     更新容器DOM的方法
十五.标签页和工具提示插件
标签页：就是通常所说的选项卡功能
1.基本功能
<ul class="nav nav-tabs">
     <li class="active"><a href="#html5" data-toggle="tab">html5</a></li>
     <li><a href="#bootstrap" data-toggle="tab">bootstrap</a></li>
     <li><a href="#jquery" data-toggle="tab">jquery</a></li>
     <li><a href="#extjs" data-toggle="tab">extjs</a></li>
</ul>
<div class="tab-content" style="padding:10px">
     <div class="tab-pane active" id="html5">鹿晗Reloaded(重启)全国巡演即将于2016年3月26日以北京为起点，4月2日、9日先后登陆广州与上海，作为鹿 晗的首个巡演，鹿晗用一年时间完成“重启”，将为北上广三地歌迷带来“鹿晗元素”十足的视听盛宴。</div>
     <div class="tab-pane" id="bootstrap">而本次巡演的门票预定也于今日随着北京场的首次“开抢”正式启动，百万人同时在线抢票，32秒内一抢而空的火爆战绩再次验证了鹿晗的超高人气。</div>
     <div class="tab-pane" id="jquery">自鹿晗首张个人专辑《Reloaded》发布以来，鹿晗以横扫内地甚至台湾的音源成绩和“限量专辑89秒售罄”、“数字专 辑9分钟破万”的销售成绩成为国内绝对实力的超人气偶像。</div>
     <div class="tab-pane" id="extjs">在此次的全国巡演中，鹿晗更用精心的准备重启了演唱会形式，国际知名演唱会设计师LeRoy Bennett 将担任总设计师，与鹿晗共同打造这场音乐盛宴。</div>
</div>
2.设置淡入淡出效果fade，In表示首选的内容默认显示
<div class="tab-pane fade in active" id="html5">
3.使用data-target进行绑定
4.用javascript，直接使用tab方法
<ul class="nav nav-tabs" id="nav">
     <li class="active"><a href="#html5">html5</a></li>
     <li><a href="#bootstrap">bootstrap</a></li>
     <li><a href="#jquery">jquery</a></li>
     <li><a href="#extjs">extjs</a></li>
</ul>
<div class="tab-content" style="padding:10px">
     <div class="tab-pane active" id="html5">鹿晗Reloaded(重启)全国巡演即将于2016年3月26日以北京为起点，4月2日、9日先后登陆广州与上海，作为鹿 晗的首个巡演，鹿晗用一年时间完成“重启”，将为北上广三地歌迷带来“鹿晗元素”十足的视听盛宴。</div>
     <div class="tab-pane" id="bootstrap">而本次巡演的门票预定也于今日随着北京场的首次“开抢”正式启动，百万人同时在线抢票，32秒内一抢而空的火爆战绩再次验证了鹿晗的超高人气。</div>
     <div class="tab-pane" id="jquery">自鹿晗首张个人专辑《Reloaded》发布以来，鹿晗以横扫内地甚至台湾的音源成绩和“限量专辑89秒售罄”、“数字专 辑9分钟破万”的销售成绩成为国内绝对实力的超人气偶像。</div>
     <div class="tab-pane" id="extjs">在此次的全国巡演中，鹿晗更用精心的准备重启了演唱会形式，国际知名演唱会设计师LeRoy Bennett 将担任总设计师，与鹿晗共同打造这场音乐盛宴。</div>
</div>
<script src="../js/jquery.js" type="text/javascript"></script>
<script src="../js/bootstrap.min.js" type="text/javascript"></script>
<script>
     $('#nav a').on('click',function(e){
          //阻止默认行为
          e.preventDefault();
          $(this).tab('show');
     })
</script>
5.事件对象
show.bs.tab     在调用tab方法时触发
shown.bs.tab    在显示整个标签时触发
$('#nav a').on('show.bs.tab',function(){
          alert('调用前触发！');
     });
工具提示
基本实例
<a href="#" data-toggle="tooltip" title="超文本标识符">HTML5</a>
<script type="text/javascript">
     $('a').tooltip();
</script>
属性包括：
data-animation     默认为true，有一个淡入淡出的效果，设置为false则不应用
data-html    默认为false，不允许提示内容格式为html
data-placement    默认值为top，还有bottom,left,right和auto
data-selector    默认为false,可以选择绑定指定的选择器
data-original-title    默认空字符串，提示语的内容，优先级比title低
title     默认空字符串，提示语的内容 
data-trigger    默认值为hover focus,表示怎么触发tooltip，其他值为：click,manual。多个值用空格隔开。Manual手动不能喝其他值同时设置
data-delay   默认值为0，延迟触发tooltip(毫秒)，如果传数字则表示show/hide的毫秒数，如果传对象，结构为：{show:500,hide:100}
十六.弹出框和警告框插件
弹出框
基本功能
<button class="btn btn-danger" data-toggle="popover" title="bootstrap" data-content="Bootstrap是一款Twitter推出的一个用于前端开发的工具">
     点击弹出/隐藏按钮
</button>
<script type="text/javascript">
     $('button').popover();
</script>
还有一些属性，与工具提示的属性相同
点击按钮控制提示框的显示与隐藏，有以下方法：
$('button').popover('show');   $('button').popover('hide');   $('button').popover('toggle');   $('button').popover('destroy');
popover插件中事件有四种：
show.bs.tab   在调用show方法时触发
shown.bs.tab   在显示整个弹窗时触发
$('button').on('show.bs.tab',function(){
     alert('调用show方法时触发');
});
警告框：点击消失的消息框
<div class="alert alert-warning">
<button class="close" data-dismiss="alert">
<span>&times;</span>
</button>
<p>警告：您的浏览器不支持！</p>
</div>
淡入淡出效果：
<div class="alert alert-warning" fade in>
使用js，可以代替data-dismiss="alert"
<div id="alert" class="alert alert-warning" fade in>
<button class="close">
<span>&times;</span>
</button>
<p>警告：您的浏览器不支持！</p>
</div>
<script type="text/javascript">
     $('.close').on('click',function(){
          $('#alert').alert('close');
     })
</script>
alert插件中有两种事件：
close.bs.alert   当close方法被调用后立即触发
closed.bs.alert   当警告框被完全关闭后立即触发
$('#alert').on('close.bs.alert',function(){
          alert('当close方法完全被触发时调用');
     })
十七.按钮和折叠插件
按钮插件
单个切换：
<button class="btn btn-primary" data-toggle="button" autocomplete="off">按钮</button>
在firefox多次页面加载时，按钮可能保持表单的禁用或选择状态，解决方法就是autocomplete="off"
单选按钮：
<div class="btn-group" data-toggle="buttons">
<label for="" class="btn btn-primary active">
     <input type="radio" name="sex" autocomplete="off" checked>男
</label>
<label for="" class="btn btn-primary">
     <input type="radio" name="sex" autocomplete="off">女
</label>
</div>
复选按钮：
<div class="btn-group" data-toggle="buttons">
<label for="" class="btn btn-primary active">
     <input type="checkbox" name="love" autocomplete="off" checked>体育
</label>
<label for="" class="btn btn-primary">
     <input type="checkbox" name="love" autocomplete="off">电脑
</label>
<label for="" class="btn btn-primary">
     <input type="checkbox" name="love" autocomplete="off">音乐
</label>
</div>
加载状态：
<button class="btn btn-priamry" data-loading-text="Loading..." autocomplete="off">开始上传</button>
<script type="text/javascript">
     $('button').on('click',function(){
          var btn=$(this).button('loading');
          setTimeout(function(){
               btn.button('reset');
          }, 1000);
     })
</script>
其中，data-loading-text中的loading要与button('loading')中的'loading'对应。效果是开始上传点击后变成Loading...隔一秒时间恢复成开始上传
button插件中的button方法有三个参数：toggle,reset和string
$('button').on('click',function(){
     $(this).button('toggle');
});
折叠：通过点击可以折叠内容
基本实例：
<button class="btn btn-primary" data-toggle="collapse" data-target="#content">
     Bootstrap
</button>
<div class="collapse" id="content">
     <div class="well">Bootstrap是Twitter推出的一个用于前端开发的开源工具包
     </div>
</div>
手风琴隐藏：
<div class="panel-group" id="accordion">
<div class="panel panel-default">
     <div class="panel-heading">
          <h4 class="panel-title">
               <a href="#collapseOne" data-toggle="collapse" data-parent="#accordion">点击我进行展示，再点击我进行折叠，第一部分</a>
          </h4>
     </div>
     <div class="panel-collapse collapse" id="collapseOne">
          <div class="panel-body">
               这里是第一部分内容
          </div>
     </div>
</div>
<div class="panel panel-default">
     <div class="panel-heading">
          <h4 class="panel-title">
               <a href="#collapseTwo" data-toggle="collapse" data-parent="#accordion">点击我进行展示，再点击我进行折叠，第一部分</a>
          </h4>
     </div>
     <div class="panel-collapse collapse" id="collapseTwo">
          <div class="panel-body">
               这里是第二部分内容
          </div>
     </div>
</div>
</div>
其中的属性及其作用分别为：
data-parent   默认为false，设置父元素选择器，即选定一个折叠区
data-toggle   如果是data-*，设置collapse表示实现折叠，如果是js中的属性，默认为true，实现反转
十八.轮播插件
轮播插件：将几张同等大小的大图，按照顺序依次播放
基本实例：
<div id="myCarousel" class="carousel slide" style="width:320px;">
     <ol class="carousel-indicators">
          <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
          <li data-target="#myCarousel" data-slide-to="1"></li>
          <li data-target="#myCarousel" data-slide-to="2"></li>
     </ol>
     <div class="carousel-inner">
          <div class="item active"><img src="img/1.jpg" alt="">
          <div class="carousel-caption">      //图片中添加的文字
               <h3>Bootstrap是一款HTML5响应式框架</h3>
          </div>
          </div>
          <div class="item"><img src="img/2.jpg" alt=""></div>
          <div class="item"><img src="img/3.jpg" alt=""></div>
     </div>
     <a href="#myCarousel" data-slide="prev" class="carousel-control left">&lsaquo;</a>
    <a href="#myCarousel" data-slide="next" class="carousel-control right">&rsaquo;</a>
</div>
data相关的属性：
data-slide接收关键字prev或next，用来改变幻灯片相对于当前位置的位置
data-slide-to向轮播底部创建一个原始华东索引，data-slide-to="2"把滑动块移动到一个特定的索引，索引从0开始计数
data-ride="carousel"属性用户标记轮播在页面加载时开始动画播放
有三个自定义属性：
data-interval  默认值为5000(毫秒)，如果为false，轮播不会自动开始循环
data-pause   默认鼠标停留在幻灯片区域(hover)即暂停轮播，鼠标离开即启动轮播
data-wrap   默认值为true,轮播是否持续循环
<script type="text/javascript">
     $('#myCarousel').carousel({
          interval:2000,
          pause:'hover',
          wrap:true,
     });
</script>
轮播的一些方法：
cycle   循环播放(从左到右)
pause   停止播放
number   轮播到指定的图片上
prev    循环到上一个项目
next    循环轮播到下一个项目
在最后一行添加：<button id="cycle" class="btn btn-default">开始</button>
<script type="text/javascript">
     $('#cycle').on('click',function(){
          $('#myCarousel').carousel('cycle');
     });
</script>
两个事件：
slide.bs.carousel   当调用slide实例方式时立即触发该事件
slid.bs.carousel   当轮播完成一个幻灯片触发该事件
十九.附加导航插件
附加导航：粘贴在屏幕某处实现锚点功能
基本实例：
     <style>
     .nav-pills{
          width: 150px;
     }
     ul.nav-pills.affix{
          top:30px;
     }
     </style>
</head>
<body style="margin:100px;" data-spy="scroll" data-target="#myScrollspy">
<div class="container">
     <div class="jumnotron" style="height:150px;">
          <h1>Bootstrap Affix</h1>
     </div>
     <div class="row">
          <div class="col-xs-3" id="myScrollspy">
               <ul class="nav nav-pills nav-stacked" data-spy="affix" data-offset-top="150">
                    <li class="active"><a href="#section-1">第一部分</a></li>
                    <li><a href="#section-2">第二部分</a></li>
                    <li><a href="#section-3">第三部分</a></li>
                    <li><a href="#section-4">第四部分</a></li>
                    <li><a href="#section-5">第五部分</a></li>
               </ul>
          </div>
          <div class="col-xs-9">
               <h2 id="section-1">第一部分内容</h2>
               <p style="line-height:2">《通知》强调，全面加强党委(党组)领导班子思想政治建设、作风建设和能力建设，切实提高李克强表示，年内在杭州举办的G20领导人峰会将围绕“创新、活力、联 动、包容的世界经济”主题，凝聚共识，推进合作，采取行动。G20成员一是要加强宏观经济政策协调，在制定本国宏观经济政策时，既要考虑促进自身增长，也 要考虑外溢性影响，共同维护和促进国际金融市场稳定。</p>
               <h2 id="section-2">第二部分内容</h2>
               <p style="line-height:2">贯彻执行民主集中制自觉性，更好发挥党总揽全局、协调各方的领导核心作用，为协调推进“四个全面”战 略布局、贯彻落实五大发展理念提供坚强政治保证和组织保证。面对复杂的国际国内形势，我们将坚定信心。</p>
               <h2 id="section-3">第三部分内容</h2>
               <p style="line-height:2">《通知》指出对各级党委 (党组)领导班子成员特别是主要负责同志重温这篇著作提出明确要求。改革和法治化建设，积极培育公开透明、长期稳定 健康发展的资本市场。实行以市场供求为基础，参考一篮子货币，有管理的浮动汇率机制。人民币汇率不存在持续贬值的基础，将在合理均衡的水平上保持基本稳 定。</p>
               <h2 id="section-4">第四部分内容</h2>
               <p style="line-height:2">做合格党员”学习教育重要内容。这表明中国在培育新动能、发展新经济方面已经取得明显成效。</p>
               <h2 id="section-5">第五部分内容</h2>
               < p style="line-height:2">在此系G20财长和央行行长会议首次在华举办，来自G20成员国、嘉宾国以及有关国际组织约700名代表出席会议。</p>
          </div>
     </div>
</div>
</body>

分类: bootstrap
标签: bootstrap
好文要顶 关注我 收藏该文    
LittleMoon
关注 - 6
粉丝 - 3
+加关注
0 0
? 上一篇：javascript 闭包
? 下一篇：AngularJS $on $broadcast $emit
posted @ 2016-07-20 09:37 LittleMoon 阅读(629) 评论(0) 编辑 收藏
刷新评论刷新页面返回顶部
注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。
【推荐】50万行VC++源码: 大型组态工控、电力仿真CAD与GIS源码库
【阿里云】云计算科技红利邀您免费体验！云服务器、云数据库等35+产品，6个月免费使用！
【免费】从零开始学编程，开发者专属实验平台免费实践！
【推荐】又拍云年中大促！现在注册，充值最高送4800元
阿里云B1
最新IT新闻:
・ 美的发公告证实下属公司10亿理财产品存诈骗风险
・ 无孔不入 谷歌尝试打造虚拟现实广告
・ Petya勒索病毒蔓延全球 至少65个国家和地区遭攻击
・ 亚信数据CTO於今：人工智能第一枪将打在垂直领域
・ 日媒称华为在日本建首家工厂 初期投资50亿日元
? 更多新闻...
美团云
最新知识库文章:
・ 小printf的故事：什么是真正的程序员？
・ 程序员的工作、学习与绩效
・ 软件开发为什么很难
・ 唱吧DevOps的落地，微服务CI/CD的范本技术解读
・ 程序员，如何从平庸走向理想？
? 更多知识库文章...
公告
昵称：LittleMoon
园龄：1年
粉丝：3
关注：6
+加关注
<	2017年6月	>
日	一	二	三	四	五	六
28	29	30	31	1	2	3
4	5	6	7	8	9	10
11	12	13	14	15	16	17
18	19	20	21	22	23	24
25	26	27	28	29	30	1
2	3	4	5	6	7	8
搜索

 找找看

 谷歌搜索
常用链接
我的随笔
我的评论
我的参与
最新评论
我的标签
我的标签
@Retention @Target @Document @Inherited 元注解(1)
angualrjs $location服务(1)
angularJS $http服务(1)
angularJs $injector(1)
AngularJS $on $broadcast $emit(1)
angularJS $watch $digest $apply(1)
angularJS constant和value(1)
angularJS promise $q(1)
angularJS 自定义指令(1)
angularJS测试 Karma Jasmine Mock(1)
更多
随笔分类
angularJS(16)
bootstrap(1)
Express(1)
git(6)
Hibernate(5)
Intellij IDEA(4)
JAVA(7)
javaScript(5)
JNDI(1)
JPA(1)
MongoDB(1)
nodejs(5)
RMI(1)
ruby(1)
Spring(4)
Spring MVC(2)
SVN(1)
thymeleaf(1)
单元测试(3)
读书笔记(1)
各种问题(3)
随笔档案
2017年4月 (8)
2017年3月 (2)
2017年2月 (4)
2017年1月 (5)
2016年12月 (4)
2016年11月 (5)
2016年10月 (2)
2016年9月 (11)
2016年8月 (7)
2016年7月 (21)
2016年6月 (2)
文章分类
Outlook(4)
最新评论
1. Re:angularJS测试一 Karma Jasmine Mock
请问，自定义匹配器怎么写呢？你这里好像省略了。
--*茉莉花开*
2. Re:angularJS constant和value
什么情况下用 mymodule.value()
--翰弟
阅读排行榜
1. springmvc报错 org.springframework.web.servlet.DispatcherServlet(7333)
2. angularJS constant和value(5326)
3. SpringMVC 测试 mockMVC(4444)
4. Spring三 Bean的三种创建方式(2760)
5. JS中timestamp日期类型的转换(2104)
评论排行榜
1. angularJS constant和value(1)
2. angularJS测试一 Karma Jasmine Mock(1)
推荐排行榜
1. springmvc报错 org.springframework.web.servlet.DispatcherServlet(4)
2. angularJS constant和value(1)
3. angularJS服务一(1)
4. JNDI(1)
5. 线程同步 synchronized 同步代码块 同步方法 同步锁(1)
Copyright ?2017 LittleMoon